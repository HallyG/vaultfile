version: 2

project_name: vaultfile

env:
  - REGISTRY=ghcr.io/hallyg
  - DESCRIPTION=An experimental CLI for encrypting and decrypting file content using the vaultfile format.
  - LICENSES=MIT

metadata:
  mod_timestamp: "{{ .CommitTimestamp }}"

before:
  hooks:
    - go mod tidy # https://goreleaser.com/customization/builds/go/#go-modules

builds:
  - binary: "{{ .ProjectName }}"
    main: ./cmd/vaultfile/cli
    env:
      - CGO_ENABLED=0
    goos:
      - linux
      - windows
      - darwin
    goarch:
      - amd64
      - arm64
    flags:
      - -trimpath
      - -mod=readonly
    ldflags:
      - -s -w -X main.BuildVersion={{.Version}} -X main.BuildShortSHA={{.Commit}}
    mod_timestamp: "{{ .CommitTimestamp }}" # https://goreleaser.com/customization/builds/go/#reproducible-builds

archives:
  - formats: [tar.gz]
    # this name template makes the OS and Arch compatible with the results of `uname`.
    name_template: >-
      {{ .ProjectName }}_
      {{- title .Os }}_
      {{- if eq .Arch "amd64" }}x86_64
      {{- else if eq .Arch "386" }}i386
      {{- else }}{{ .Arch }}{{ end }}
      {{- if .Arm }}v{{ .Arm }}{{ end }}
    format_overrides:
      - goos: windows
        formats: [zip]

checksum:
  name_template: "checksums.txt"

dockers:
  - use: buildx
    goos: linux
    goarch: amd64
    image_templates:
      - "{{ .Env.REGISTRY }}/{{ .ProjectName }}:{{ .Tag }}-amd64"
    dockerfile: Dockerfile.goreleaser
    build_flag_templates:
      - "--pull"
      - "--label=org.opencontainers.image.created={{.Date}}"
      - "--label=org.opencontainers.image.name={{.ProjectName}}"
      - "--label=org.opencontainers.image.description={{.Env.DESCRIPTION}}"
      - "--label=org.opencontainers.image.licenses={{.Env.LICENSES}}"
      - "--label=org.opencontainers.image.revision={{.FullCommit}}"
      - "--label=org.opencontainers.image.version={{.Version}}"
      - "--label=org.opencontainers.image.source={{.GitURL}}"
      - "--platform=linux/amd64"
  - use: buildx
    goos: linux
    goarch: arm64
    image_templates:
      - "{{ .Env.REGISTRY }}/{{ .ProjectName }}:{{ .Tag }}-arm64"
    dockerfile: Dockerfile.goreleaser
    build_flag_templates:
      - "--pull"
      - "--label=org.opencontainers.image.created={{.Date}}"
      - "--label=org.opencontainers.image.name={{.ProjectName}}"
      - "--label=org.opencontainers.image.description={{.Env.DESCRIPTION}}"
      - "--label=org.opencontainers.image.licenses={{.Env.LICENSES}}"
      - "--label=org.opencontainers.image.revision={{.FullCommit}}"
      - "--label=org.opencontainers.image.version={{.Version}}"
      - "--label=org.opencontainers.image.source={{.GitURL}}"
      - "--platform=linux/arm64"

docker_manifests:
  - name_template: "{{ .Env.REGISTRY }}/{{ .ProjectName }}:{{ .Tag }}"
    image_templates:
      - "{{ .Env.REGISTRY }}/{{ .ProjectName }}:{{ .Tag }}-amd64"
      - "{{ .Env.REGISTRY }}/{{ .ProjectName }}:{{ .Tag }}-arm64"
  - name_template: "{{ .Env.REGISTRY }}/{{ .ProjectName }}:latest"
    image_templates:
      - "{{ .Env.REGISTRY }}/{{ .ProjectName }}:{{ .Tag }}-amd64"
      - "{{ .Env.REGISTRY }}/{{ .ProjectName }}:{{ .Tag }}-arm64"